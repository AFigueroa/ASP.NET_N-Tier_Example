using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using ACME.DAL;

namespace ACME.BL.Test
{
    [TestClass]
    public class CustomerTest
    {
        [TestMethod]
        public void FullNameTestValid()
        {
            // I. Arrange

            // Create a new instance of the Customer class and assign it to a local variable customer of type Customer
            Customer customer = new Customer();

            // Assign the test values
            customer.FirstName = "Antonio";
            customer.LastName = "Figueroa";
            
            // Define the espected value of the return statement
            string expected = "Figueroa, Antonio";

            // II. Act

            // Retrive the value generated by the class
            string actual = customer.FullName;

            // III. Assert

            // Verify that the expected value matches the actual value
            Assert.AreEqual(expected, actual);
        }

        [TestMethod]
        public void FullNameFirstNameEmpty()
        {
            // I. Arrange

            // Create a new instance of the Customer class and assign it to a local variable customer of type Customer
            Customer customer = new Customer();

            // Assign the test values
            customer.LastName = "Figueroa";

            // Define the espected value of the return statement
            string expected = "Figueroa";

            // II. Act

            // Retrive the value generated by the class
            string actual = customer.FullName;

            // III. Assert

            // Verify that the expected value matches the actual value
            Assert.AreEqual(expected, actual);
        }

        [TestMethod]
        public void FullNameLastNameEmpty()
        {
            // I. Arrange

            // Create a new instance of the Customer class and assign it to a local variable customer of type Customer
            Customer customer = new Customer();

            // Assign the test values
            customer.FirstName = "Antonio";

            // Define the espected value of the return statement
            string expected = "Antonio";

            // II. Act

            // Retrive the value generated by the class
            string actual = customer.FullName;

            // III. Assert

            // Verify that the expected value matches the actual value
            Assert.AreEqual(expected, actual);
        }

        [TestMethod]
        public void StaticTest()
        {
            // I. Arrange

            // Create a new instance of the Customer class and assign it to a local variable customer of type Customer
            var customer1 = new Customer();
            // Assign the test values
            customer1.FirstName = "Antonio";
            // Increase the count of customers
            Customer.InstanceCount += 1;

            // Create a new instance of the Customer class and assign it to a local variable customer of type Customer
            var customer2 = new Customer();
            // Assign the test values
            customer2.FirstName = "John";
            // Increase the count of customers
            Customer.InstanceCount += 1;

            // Create a new instance of the Customer class and assign it to a local variable customer of type Customer
            var customer3 = new Customer();
            // Assign the test values
            customer3.FirstName = "Jane";
            // Increase the count of customers
            Customer.InstanceCount += 1;


            // II. Act

            // Retrive the value generated by the class

            // III. Assert

            // Verify that the expected value matches the actual value
            Assert.AreEqual(3, Customer.InstanceCount);
        }

        [TestMethod]
        public void ValidateValid()
        {
            // Arrange

            // Create Customer class inctance
            var customer = new Customer();

            // Assign required values
            customer.LastName = "Figueroa";
            customer.EmailAddress = "test@email.com";

            // Expected value
            var expected = true;

            // Act

            // Run the validate method
            var actual = customer.Validate();

            // Test the result of the validate method against the expected value
            Assert.AreEqual(expected, actual);
        }

        [TestMethod]
        public void ValidateMissingLastName()
        {
            // Arrange

            // Create Customer class inctance
            var customer = new Customer();

            // Assign required values
            customer.EmailAddress = "test@email.com";

            // Expected value
            var expected = false;

            // Act

            // Run the validate method
            var actual = customer.Validate();

            // Test the result of the validate method against the expected value
            Assert.AreEqual(expected, actual);
        }
    }
}
